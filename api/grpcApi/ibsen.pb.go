// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ibsen.proto

package grpcApi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WriteStatus struct {
	Wrote                int64    `protobuf:"varint,1,opt,name=wrote,proto3" json:"wrote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteStatus) Reset()         { *m = WriteStatus{} }
func (m *WriteStatus) String() string { return proto.CompactTextString(m) }
func (*WriteStatus) ProtoMessage()    {}
func (*WriteStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3e5c14afe4be539, []int{0}
}

func (m *WriteStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteStatus.Unmarshal(m, b)
}
func (m *WriteStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteStatus.Marshal(b, m, deterministic)
}
func (m *WriteStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteStatus.Merge(m, src)
}
func (m *WriteStatus) XXX_Size() int {
	return xxx_messageInfo_WriteStatus.Size(m)
}
func (m *WriteStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteStatus.DiscardUnknown(m)
}

var xxx_messageInfo_WriteStatus proto.InternalMessageInfo

func (m *WriteStatus) GetWrote() int64 {
	if m != nil {
		return m.Wrote
	}
	return 0
}

type ReadParams struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Offset               uint64   `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	BatchSize            uint32   `protobuf:"varint,3,opt,name=batchSize,proto3" json:"batchSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadParams) Reset()         { *m = ReadParams{} }
func (m *ReadParams) String() string { return proto.CompactTextString(m) }
func (*ReadParams) ProtoMessage()    {}
func (*ReadParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3e5c14afe4be539, []int{1}
}

func (m *ReadParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadParams.Unmarshal(m, b)
}
func (m *ReadParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadParams.Marshal(b, m, deterministic)
}
func (m *ReadParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadParams.Merge(m, src)
}
func (m *ReadParams) XXX_Size() int {
	return xxx_messageInfo_ReadParams.Size(m)
}
func (m *ReadParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadParams.DiscardUnknown(m)
}

var xxx_messageInfo_ReadParams proto.InternalMessageInfo

func (m *ReadParams) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *ReadParams) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadParams) GetBatchSize() uint32 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

type InputEntries struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Entries              [][]byte `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InputEntries) Reset()         { *m = InputEntries{} }
func (m *InputEntries) String() string { return proto.CompactTextString(m) }
func (*InputEntries) ProtoMessage()    {}
func (*InputEntries) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3e5c14afe4be539, []int{2}
}

func (m *InputEntries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InputEntries.Unmarshal(m, b)
}
func (m *InputEntries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InputEntries.Marshal(b, m, deterministic)
}
func (m *InputEntries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InputEntries.Merge(m, src)
}
func (m *InputEntries) XXX_Size() int {
	return xxx_messageInfo_InputEntries.Size(m)
}
func (m *InputEntries) XXX_DiscardUnknown() {
	xxx_messageInfo_InputEntries.DiscardUnknown(m)
}

var xxx_messageInfo_InputEntries proto.InternalMessageInfo

func (m *InputEntries) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *InputEntries) GetEntries() [][]byte {
	if m != nil {
		return m.Entries
	}
	return nil
}

type Entry struct {
	Offset               uint64   `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Content              []byte   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}
func (*Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3e5c14afe4be539, []int{3}
}

func (m *Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entry.Unmarshal(m, b)
}
func (m *Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entry.Marshal(b, m, deterministic)
}
func (m *Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entry.Merge(m, src)
}
func (m *Entry) XXX_Size() int {
	return xxx_messageInfo_Entry.Size(m)
}
func (m *Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_Entry proto.InternalMessageInfo

func (m *Entry) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Entry) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type OutputEntries struct {
	Entries              []*Entry `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutputEntries) Reset()         { *m = OutputEntries{} }
func (m *OutputEntries) String() string { return proto.CompactTextString(m) }
func (*OutputEntries) ProtoMessage()    {}
func (*OutputEntries) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3e5c14afe4be539, []int{4}
}

func (m *OutputEntries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutputEntries.Unmarshal(m, b)
}
func (m *OutputEntries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutputEntries.Marshal(b, m, deterministic)
}
func (m *OutputEntries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutputEntries.Merge(m, src)
}
func (m *OutputEntries) XXX_Size() int {
	return xxx_messageInfo_OutputEntries.Size(m)
}
func (m *OutputEntries) XXX_DiscardUnknown() {
	xxx_messageInfo_OutputEntries.DiscardUnknown(m)
}

var xxx_messageInfo_OutputEntries proto.InternalMessageInfo

func (m *OutputEntries) GetEntries() []*Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func init() {
	proto.RegisterType((*WriteStatus)(nil), "WriteStatus")
	proto.RegisterType((*ReadParams)(nil), "ReadParams")
	proto.RegisterType((*InputEntries)(nil), "InputEntries")
	proto.RegisterType((*Entry)(nil), "Entry")
	proto.RegisterType((*OutputEntries)(nil), "OutputEntries")
}

func init() { proto.RegisterFile("ibsen.proto", fileDescriptor_c3e5c14afe4be539) }

var fileDescriptor_c3e5c14afe4be539 = []byte{
	// 309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x41, 0x4f, 0xc2, 0x30,
	0x14, 0xc7, 0x29, 0x30, 0x08, 0x6f, 0xc3, 0x43, 0x43, 0xcc, 0x42, 0x3c, 0x2c, 0x35, 0xd1, 0x9d,
	0x8a, 0xe2, 0x49, 0x0f, 0x26, 0x92, 0x70, 0xe0, 0xa2, 0xa4, 0x1c, 0x24, 0xde, 0xba, 0x51, 0xa0,
	0x07, 0xd6, 0xa5, 0xbc, 0x85, 0xe8, 0xc7, 0xf1, 0x93, 0x9a, 0x75, 0x22, 0xe3, 0xe0, 0xf1, 0xd7,
	0xbc, 0xbe, 0xdf, 0xcb, 0xff, 0x0f, 0xbe, 0x4e, 0xf6, 0x2a, 0xe3, 0xb9, 0x35, 0x68, 0xd8, 0x35,
	0xf8, 0xef, 0x56, 0xa3, 0x5a, 0xa0, 0xc4, 0x62, 0x4f, 0x07, 0xe0, 0x1d, 0xac, 0x41, 0x15, 0x92,
	0x88, 0xc4, 0x2d, 0x51, 0x01, 0x5b, 0x02, 0x08, 0x25, 0x57, 0x73, 0x69, 0xe5, 0xce, 0xcd, 0xa0,
	0xc9, 0x75, 0xea, 0x66, 0x7a, 0xa2, 0x02, 0x7a, 0x09, 0x1d, 0xb3, 0x5e, 0xef, 0x15, 0x86, 0xcd,
	0x88, 0xc4, 0x6d, 0xf1, 0x4b, 0xf4, 0x0a, 0x7a, 0x89, 0xc4, 0x74, 0xbb, 0xd0, 0x5f, 0x2a, 0x6c,
	0x45, 0x24, 0xee, 0x8b, 0xd3, 0x03, 0x7b, 0x86, 0x60, 0x96, 0xe5, 0x05, 0x4e, 0x33, 0xb4, 0x5a,
	0xfd, 0xb7, 0x3b, 0x84, 0xae, 0xaa, 0x06, 0xc2, 0x66, 0xd4, 0x8a, 0x03, 0x71, 0x44, 0xf6, 0x08,
	0x5e, 0xf9, 0xf5, 0xb3, 0xa6, 0x27, 0x67, 0xfa, 0x10, 0xba, 0xa9, 0xc9, 0x50, 0x65, 0xd5, 0x5d,
	0x81, 0x38, 0x22, 0xbb, 0x87, 0xfe, 0x5b, 0x81, 0x35, 0x77, 0x74, 0x6e, 0xf1, 0xc7, 0x1d, 0xee,
	0x76, 0xff, 0xd9, 0xc6, 0x4b, 0xf0, 0x66, 0x65, 0x76, 0xf4, 0xa6, 0x8c, 0x49, 0xa3, 0xa2, 0x7d,
	0x5e, 0x3f, 0x7f, 0x18, 0xf0, 0x5a, 0x98, 0xac, 0x41, 0x6f, 0xa1, 0x6d, 0x95, 0x5c, 0x51, 0x9f,
	0x9f, 0xf2, 0x1b, 0x5e, 0xf0, 0x33, 0x2f, 0x6b, 0xdc, 0x91, 0xc9, 0x13, 0x0c, 0x36, 0x1a, 0xb7,
	0x45, 0xc2, 0x53, 0xb3, 0xe3, 0x98, 0x1e, 0xb8, 0x2b, 0x69, 0x02, 0xce, 0x37, 0x2f, 0xab, 0x9a,
	0x93, 0x8f, 0x60, 0x24, 0x73, 0x3d, 0xda, 0xd8, 0x3c, 0x7d, 0xc9, 0xf5, 0x77, 0xd3, 0x9b, 0x4d,
	0x16, 0xd3, 0xd7, 0xa4, 0xe3, 0x9a, 0x7c, 0xf8, 0x09, 0x00, 0x00, 0xff, 0xff, 0x0c, 0x63, 0x54,
	0x84, 0xd8, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IbsenClient is the client API for Ibsen service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IbsenClient interface {
	Write(ctx context.Context, in *InputEntries, opts ...grpc.CallOption) (*WriteStatus, error)
	Read(ctx context.Context, in *ReadParams, opts ...grpc.CallOption) (Ibsen_ReadClient, error)
}

type ibsenClient struct {
	cc grpc.ClientConnInterface
}

func NewIbsenClient(cc grpc.ClientConnInterface) IbsenClient {
	return &ibsenClient{cc}
}

func (c *ibsenClient) Write(ctx context.Context, in *InputEntries, opts ...grpc.CallOption) (*WriteStatus, error) {
	out := new(WriteStatus)
	err := c.cc.Invoke(ctx, "/Ibsen/write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ibsenClient) Read(ctx context.Context, in *ReadParams, opts ...grpc.CallOption) (Ibsen_ReadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Ibsen_serviceDesc.Streams[0], "/Ibsen/read", opts...)
	if err != nil {
		return nil, err
	}
	x := &ibsenReadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Ibsen_ReadClient interface {
	Recv() (*OutputEntries, error)
	grpc.ClientStream
}

type ibsenReadClient struct {
	grpc.ClientStream
}

func (x *ibsenReadClient) Recv() (*OutputEntries, error) {
	m := new(OutputEntries)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// IbsenServer is the server API for Ibsen service.
type IbsenServer interface {
	Write(context.Context, *InputEntries) (*WriteStatus, error)
	Read(*ReadParams, Ibsen_ReadServer) error
}

// UnimplementedIbsenServer can be embedded to have forward compatible implementations.
type UnimplementedIbsenServer struct {
}

func (*UnimplementedIbsenServer) Write(ctx context.Context, req *InputEntries) (*WriteStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Write not implemented")
}
func (*UnimplementedIbsenServer) Read(req *ReadParams, srv Ibsen_ReadServer) error {
	return status.Errorf(codes.Unimplemented, "method Read not implemented")
}

func RegisterIbsenServer(s *grpc.Server, srv IbsenServer) {
	s.RegisterService(&_Ibsen_serviceDesc, srv)
}

func _Ibsen_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InputEntries)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IbsenServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Ibsen/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IbsenServer).Write(ctx, req.(*InputEntries))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ibsen_Read_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReadParams)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(IbsenServer).Read(m, &ibsenReadServer{stream})
}

type Ibsen_ReadServer interface {
	Send(*OutputEntries) error
	grpc.ServerStream
}

type ibsenReadServer struct {
	grpc.ServerStream
}

func (x *ibsenReadServer) Send(m *OutputEntries) error {
	return x.ServerStream.SendMsg(m)
}

var _Ibsen_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Ibsen",
	HandlerType: (*IbsenServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "write",
			Handler:    _Ibsen_Write_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "read",
			Handler:       _Ibsen_Read_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "ibsen.proto",
}
